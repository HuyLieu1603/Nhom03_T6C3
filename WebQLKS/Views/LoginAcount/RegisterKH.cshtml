@model WebQLKS.Models.RegisterViewModel

@{
    ViewBag.Title = "RegisterKH";
    Layout = "~/Views/Shared/_Layout.cshtml";


    <meta charset="UTF-8">
}
<link href="~/Content/Home.css" rel="stylesheet">
<style>
    .carousel-item img {
        max-width: 100%;
        height: calc(100vh - 150px);
        object-fit: cover;
    }


    h6, .heading-6 {
        font-family: "Montserrat", Helvetica, Arial, sans-serif;
        font-size: 14px;
        text-transform: uppercase;
    }

    h1, h2, h3, h4, h5, h6, p {
        margin-top: 0;
        margin-bottom: 0;
        font-family: "Playfair Display", "Times New Roman", Times, serif;
        font-weight: 400;
    }

    .line {
        display: -webkit-box;
        -webkit-box-orient: vertical;
        -webkit-line-clamp: 3;
        overflow: hidden;
    }

    .row-img {
        margin: 10px;
        height: 250px;
        max-width: 100%;
    }

    img {
        object-fit: cover;
        width: 100%;
        height: 100%;
    }

    .card {
        height: fit-content;
        margin: 10px;
    }

    .row {
        justify-content: space-evenly;
    }



    .Detail-btn {
        width: fit-content;
        position: relative;
        left: 37%;
        top: 30px;
    }

    .btn-custom {
        background-color: cadetblue;
    }

        .btn-custom:hover {
            background-color: lightblue;
        }


    /* Bố cục tổng thể của menu */
    .menu {
        display: flex;
        flex-direction: row;
        justify-content: space-between; /* Tạo khoảng cách hợp lý giữa hai phần */
        margin: 20px 0; /* Thêm khoảng cách giữa các phần tử bên trên và bên dưới */
    }

    /* Bên trái của menu - danh sách dịch vụ */
    .menu-left {
        width: 55%; /* Chiếm 55% chiều rộng */
        max-height: 100%;
        overflow-y: auto;
        padding-right: 20px; /* Thêm khoảng cách giữa danh sách và hình ảnh */
    }

    /* Bên phải của menu - hình ảnh */
    .menu-right {
        width: 40%; /* Chiếm 40% chiều rộng */
    }

    .card-img img {
        width: 100%;
        height: auto;
        object-fit: cover; /* Giữ tỷ lệ của ảnh mà không bị méo */
        border-radius: 10px; /* Làm góc ảnh mềm mại hơn */
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1); /* Thêm bóng để ảnh nổi bật */
    }

    /* Danh sách menu */
    .menu-list {
        list-style: none; /* Bỏ dấu chấm tròn của danh sách */
        padding-left: 0;
    }

    /* Mỗi mục trong menu */
    .menu-item {
        background-color: #f9f9f9;
        padding: 15px;
        border-radius: 8px; /* Bo góc cho mỗi mục */
        margin-bottom: 15px;
        box-shadow: 0 2px 5px rgba(0, 0, 0, 0.1); /* Thêm bóng nhẹ */
        transition: background-color 0.3s ease;
    }

        /* Hiệu ứng khi hover vào menu item */
        .menu-item:hover {
            background-color: #f1f1f1;
        }

    /* Tiêu đề và giá của menu */
    .menu-item__header {
        display: flex;
        justify-content: space-between;
        align-items: center;
        margin-bottom: 10px;
    }

        .menu-item__header h4 {
            margin: 0;
            font-family: 'Playfair Display', serif;
            font-weight: 600;
            font-size: 18px;
        }

    /* Giá dịch vụ */
    .menu-item__price {
        color: #c19b76;
        font-weight: bold;
    }

    /* Mô tả của dịch vụ */
    .menu-item__main p {
        margin: 0;
        font-family: 'Montserrat', sans-serif;
        font-size: 14px;
        color: #555;
        line-height: 1.5; /* Giúp các dòng văn bản trông thoáng hơn */
    }

    /* Làm đẹp cho nút chi tiết hoặc các nút khác */
    .btn-custom {
        background-color: #c19b76;
        color: white;
        border-radius: 20px;
        padding: 8px 20px;
        transition: background-color 0.3s ease;
    }

        .btn-custom:hover {
            background-color: #b0895f;
        }

    /* Giữ nguyên các phần tử đã được thiết kế trước */
    .index-header, .navbar, .footer, .nav-item, .location {
        /* Đã được thiết kế tốt, giữ nguyên */
    }

    .text-fontFamily {
        font-family: 'Playfair Display', serif;
    }
</style>
<style>
    .field-validation-error {
        color: red;
    }

    .background {
        margin: 0px;
        padding: 0px;
        color: white;
        height: 120vh;
        background-image: url('/Content/Home/Image/image_bg.jpg');
        background-size: cover;
    }

    .form-login {
        display: grid;
        place-items: center; /* Căn giữa theo cả chiều ngang và chiều dọc */
        height: 100vh;
        width: 100%;
    }

    .word-font {
        color: white
    }

    .form-login > form {
        border: 1px solid white;
        margin-top: 20px;
        width: fit-content;
        padding: 3%;
        border-radius: 30px;
        background-color: rgba(0, 0, 0, 0.58);
        /* Xanh lam trong suốt 50% */
    }
</style>
<div class="container-fluid background">
    @{
        if (TempData["ErrorRegister"] != null)
        {
            <div class="alert alert-danger text-center">
                @TempData["ErrorRegister"]
            </div>
        }
    }
    <div class="form-login">
        @using (Html.BeginForm("RegisterKH", "LoginAcount", FormMethod.Post, new { enctype = "multipart/form-data" }))
        {
            @Html.AntiForgeryToken()
            <h1 class="h3 mb-3 fw-normal">ĐĂNG KÝ</h1>

            <div class="form-floating">
                <div><label for="HoTen">Họ và tên</label></div>
                <div>
                    @Html.TextBoxFor(m => m.HoTen, new { @class = "form-control", placeholder = "Xin nhập họ và tên người dùng" })
                    @Html.ValidationMessageFor(m => m.HoTen, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-floating">
                <div><label for="TaiKhoan">Tài khoản</label></div>
                <div>
                    @Html.TextBoxFor(m => m.TaiKhoan, new { @class = "form-control", placeholder = "Xin nhập tên tài khoản" })
                    @Html.ValidationMessageFor(m => m.TaiKhoan, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-floating">
                <div><label for="Email">Email</label></div>
                <div>
                    @Html.TextBoxFor(m => m.Email, new { @class = "form-control", placeholder = "example@gmail.com" })
                    @Html.ValidationMessageFor(m => m.Email, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-floating">
                <div><label for="SDT">Số điện thoại</label></div>
                <div>
                    @Html.TextBoxFor(m => m.SDT, new { @class = "form-control", placeholder = "0123456789" })
                    @Html.ValidationMessageFor(m => m.SDT, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-floating">
                <div><label for="CCCD">CCCD</label></div>
                <div>
                    @Html.TextBoxFor(m => m.CCCD, new { @class = "form-control", placeholder = "012345678901" })
                    @Html.ValidationMessageFor(m => m.CCCD, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-floating">
                <div><label for="DiaChi">Địa chỉ</label></div>
                <div>
                    @Html.TextBoxFor(m => m.DiaChi, new { @class = "form-control", placeholder = "Sư Vạn Hạnh quận 10 tp HCM" })
                    @Html.ValidationMessageFor(m => m.DiaChi, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-floating">
                <div><label for="NgaySinh">Ngày sinh</label></div>
                <div>
                    @Html.TextBoxFor(m => m.NgaySinh, "{0:yyyy-MM-dd}", new { @class = "form-control", type = "date" })
                    @Html.ValidationMessageFor(m => m.NgaySinh, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-floating">
                <div><label for="MatKhau">Mật khẩu</label></div>
                <div>
                    @Html.PasswordFor(m => m.MatKhau, new { @class = "form-control", placeholder = "example123" })
                    @Html.ValidationMessageFor(m => m.MatKhau, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-floating">
                <div><label for="ConfirmPass">Nhập lại mật khẩu</label></div>
                <div>
                    @Html.PasswordFor(m => m.ConfirmPass, new { @class = "form-control", placeholder = "example123" })
                    @Html.ValidationMessageFor(m => m.ConfirmPass, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-floating" style="margin-bottom:10px">
                <div><label for="QuocTich">Quốc tịch</label></div>
                <div>
                    @Html.DropDownListFor(m => m.QuocTich, new List<SelectListItem>
                    {
                        new SelectListItem { Text = "Việt Nam", Value = "Việt Nam" },
                        new SelectListItem { Text = "Nước Ngoài", Value = "Nước Ngoài" }
                    }, "Chọn Quốc Tịch", new { @class = "form-control" })
                    @Html.ValidationMessageFor(m => m.QuocTich, "", new { @class = "text-danger" })
                </div>
            </div>

            <button class="btn btn-primary w-100 py-2" type="submit">Đăng ký</button>

            <div>Đã có tài khoản? Hãy đi đến <a class="word-font" href="/LoginAcount/LoginAcountKH">Đăng nhập</a></div>
        }
    </div>
</div>

